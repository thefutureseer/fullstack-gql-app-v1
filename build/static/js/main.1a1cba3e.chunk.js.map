{"version":3,"sources":["graphql/Mutations.js","graphql/Query.js","components/Button.js","components/Modal.js","components/Message.js","components/Form.js","components/LoginButton.js","components/App.js","test/reportWebVitals.js","index.js"],"names":["POST_BOOKS","gql","_templateObject","Object","taggedTemplateLiteral","DELETE_POST","_templateObject2","UPDATE_ONE_POST","_templateObject3","GET_BOOKS","Query_templateObject","Query_templateObject2","Button","_ref","_ref$type","type","buttonText","onClick","loading","_ref$className","className","react_default","a","createElement","disabled","classnames","bg-bb-purple","bg-bb-gray-700","cursor-wait","Modal","setAppElement","customStyles","content","top","left","right","bottom","background","marginRight","transform","EditModal","prop","subtitle","_React$useState","React","useState","_React$useState2","slicedToArray","modalIsOpen","setIsOpen","_React$useState3","author","_id","id","_React$useState4","state","setState","closeModal","_useMutation","useMutation","updateOnePost","changeHandler","asyncToGenerator","_regeneratorRuntime","mark","_callee","event","_event$target","name","value","wrap","_context","prev","next","target","objectSpread","defineProperty","stop","_x","apply","this","arguments","components_Button","lib_default","isOpen","onAfterOpen","style","color","onRequestClose","contentLabel","ref","_subtitle","onChange","variables","Message","deleteMuta","_useQuery","useQuery","error","data","message","getAllBooks","map","book","key","e","preventDefault","update","cache","normalizeId","identify","__type","evict","gc","prom","toString","title","Form","uuidv4","_useState","_useState2","stateProm","setProm","_useMutation2","createPost","submitHandler","Form_regeneratorRuntime","window","location","reload","err","console","_ref2","_callee2","_context2","log","_x2","onSubmit","placeholder","LoginButton","login","setLogin","navigate","useNavigate","visibility","App","components_LoginButton","dist","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","InMemoryCache","ReactDOM","render","react_router_dom_dist","ApolloProvider","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1a1cba3e.chunk.js","sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const POST_BOOKS = gql`\n  mutation \n    createPost($_id:ID!, $author:String!, $title:String, $prom:Boolean) {\n     createPost(books: {_id:$_id, author:$author, title:$title, prom:$prom}) {\n      _id\n      author\n      title\n      prom\n     }\n    }\n`;\n\nexport const DELETE_POST = gql`\n  mutation\n   deleteOnePost($_id: ID!) {\n     deleteOnePost(_id: $_id) {\n       _id\n     }\n   }\n`;\n\nexport const UPDATE_ONE_POST = gql`\n  mutation\n    updateOnePost($_id: ID!, $author: String!) {\n      updateOnePost(books: {_id: $_id, author: $author}) {\n        _id\n        author\n      }\n    }`\n\n","//only exactly what we want, \n//in these queries shape/name everything possible to get\nimport { gql } from '@apollo/client';\nexport const GET_BOOKS = gql`\n  query {\n      getAllBooks {\n        _id\n        title\n        author\n        prom\n      }\n    }\n`\nexport const GET_ONE = gql`\n  query \n    getOne($_id: ID ) {\n      getOne(_id: $_id) {\n      _id\n    }}\n`\n","import React from \"react\";\n\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({\n  type = \"button\",\n  buttonText,\n  onClick,\n  loading,\n  className = '',\n}) => {\n\n\n  return (\n    <div className=\"mt-6\">\n      <button\n        type={type}\n        onClick={onClick}\n        disabled={loading}\n        className={classnames(\n          [className],\n          \"delete-btn text-sm font-medium leading-5 text-black transition duration-150 ease-in-out  border border-transparent rounded-md group hover:bg-opacity-90 focus:outline-none\",\n          {\n            \"bg-bb-purple\": !loading,\n            \"bg-bb-gray-700\": loading,\n            \"cursor-wait\": loading,\n          }\n        )}\n      >\n        {loading ? \"Loading...\" : buttonText}\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  type: PropTypes.string,\n  buttonText: PropTypes.string,\n  loading: PropTypes.bool,\n  onClick: PropTypes.func,\n};\nexport default Button;","import { useMutation } from '@apollo/client';\nimport React from 'react';\nimport Button from './Button';\nimport Modal from 'react-modal';\nimport { UPDATE_ONE_POST } from '../graphql/Mutations';\n\nModal.setAppElement('#root');\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    background: 'black',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nexport default function EditModal(prop) {\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  const [state, setState] = React.useState({\n    author: \"\",\n    _id: prop.id\n  })\n  \n  //open/close modal react functions\n  function openModal() {\n    setIsOpen(true);\n\n  }\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n  function closeModal() {\n    setIsOpen(false);\n  }\n  \n  const [updateOnePost] = useMutation(UPDATE_ONE_POST);\n  \n  const clickHandler = () => {\n    updateOnePost({\n      variables: {...state}\n    })\n  }\n  \n  const changeHandler = async (event) => {\n    const {name, value} = event.target;\n    await setState({...state, [name]:value})\n  }\n\n  return (\n    <div>\n      <Button onClick={openModal} buttonText=\"Edit\" />\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Example Modal\"\n      >\n        <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Hello</h2>\n        <button onClick={closeModal}>close</button>\n        <div className='secret'>edit secret</div>\n        <form>\n          <input onChange={changeHandler} name='author' value={state.author} />\n          {/* <button>tab navigation</button>\n          <button>stays</button>\n          <button>inside</button> */}\n          <button onClick={()=>{clickHandler()}}>the modal</button>\n        </form>\n      </Modal>\n    </div>\n  );\n}","import React from 'react';\nimport {GET_BOOKS} from '../graphql/Query'; \nimport { DELETE_POST } from '../graphql/Mutations';\nimport {useQuery} from '@apollo/client';\nimport { useMutation } from '@apollo/client';\n\nimport EditModal from './Modal';\n import Button from './Button.js';\n\nexport default function Message() {\n  const [deleteMuta] = useMutation(DELETE_POST);\n\n  const clickHandler = (_id) => {  \n    //  if (deleting) return;\n\n    deleteMuta({\n     variables: {_id},\n     update(cache) {\n       const normalizeId = cache.identify({_id, __type: 'Book'});\n       //using evict to DELETE\n       cache.evict({_id: normalizeId});\n       cache.gc();\n     }\n   });\n  }\n\n  const {loading, error, data} = useQuery(GET_BOOKS);\n\n  if (loading) return <p>....loading!</p>\n  if (error) return <p>{error.message}</p>\n\n  return (\n    <div className=\"container box\">\n     <p> Begin special list here: </p>\n\n     {\n      data.getAllBooks.map(book=>(\n       <div className='msg-div' key={book._id}>\n         <h1 className='prom'>\n           <EditModal className='prom-div' id={book._id}/>\n           <Button onClick={(e)=>{e.preventDefault(); clickHandler(book._id)}} buttonText=\"Delete\"/>\n           <div className='prom-div'>\n              <div>\n                <p>prom</p>\n                <span>{book.prom.toString()}</span>\n              </div>\n           </div>\n\n           <div className='prom-div'>\n            <div>\n              <p>Author</p>\n              <span>{book.author}</span>\n            </div>\n           </div>\n\n           <div className='prom-div'>\n            <div>\n              <p>Note</p> \n              <span>{book.title}</span>\n            </div>\n           </div> \n\n         </h1>\n       </div>\n      ))\n     }\n\n     <p> End of list </p>\n    </div>\n  )\n};\n","import React, { useState } from 'react';\nimport { POST_BOOKS } from '../graphql/Mutations';\nimport { useMutation } from '@apollo/client';\nimport { v4 as uuidv4 } from 'uuid';\nimport Message from './Message';\n\nexport default function Form() {\n  const _id = uuidv4();\n\n  const [stateProm, setProm] = useState({\n    _id: _id,\n    author: \"\",\n    title: \"\",\n    prom: false\n  });\n\n  const [createPost, {error}] = useMutation(POST_BOOKS);\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    try {\n      createPost({\n        variables: { ...stateProm},\n      })\n      window.location.reload()\n    } catch (err) {\n      console.error(error);\n    }\n  }\n\n  const changeHandler = async (event) => {\n\n    const {name, value} = event.target;\n    // !stateProm.prom ? stateProm.prom = true : stateProm.prom = false;\n      console.log(stateProm.prom, \" setstate prom\")\n\n    await setProm({...stateProm, [name]: value})\n    console.log(stateProm, \" this is stateProm\")\n  }\n\n  return (\n   <div>\n    <form onSubmit={submitHandler} className='form container box'>\n      <div >\n        <label>names</label>\n        <input  onChange={changeHandler} name=\"author\" value={stateProm.author} className=\"form-control\" placeholder=\"names\"/>\n      </div>\n\n      <div >\n        <label>note</label>\n        <input  onChange={changeHandler} name=\"title\" value={stateProm.title} className=\"form-control\" placeholder=\"note\"/>\n      </div>\n\n      {/* <div >\n        <input  onChange={changeHandler} name=\"prom\" value={stateProm.prom} className=\"form-control\" placeholder=\"true\"/>\n      </div> */}\n\n      <div className=\"form-check\">\n       <label className=\"form-check-label\">\n        <input type=\"checkbox\"  onChange={()=>{return !stateProm.prom ? stateProm.prom = true : stateProm.prom = false;}} name=\"prom\" value={stateProm.prom} className=\"form-check-input\" />\n         <p>prom</p>\n       </label>\n      </div>\n\n      <div >\n        <label >Sincere message</label>\n        <p className=\"sin-msg m-2 text-danger\">We'll never share your secret with anyone else.</p>\n      </div>\n\n      <div className=\"form-check\">\n        <input type=\"checkbox\" className=\"form-check-input\" />\n        <label className=\"form-check-label\">Check me out</label>\n      </div>\n      <button type='submit' className=\"btn btn-primary\" >Submit</button>\n    </form>\n    <Message/>\n   </div> \n  )\n}\n","import React, {useState} from 'react';\nimport '../style/App.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst LoginButton = () => {\n  const [login, setLogin] = useState(\"visible\");\n\n  // const history = useHistory();\n  const navigate = useNavigate();\n  \n  const handleClick = () => {\n      console.log(login, \"login..\")\n      setLogin(\"hidden\") \n    // history.push('/form');\n    navigate('/form');\n  };\n\n  return (\n   <div>\n    <button className=\"log-btn\" style={{visibility:login}} onClick={handleClick}>Login</button>\n   </div>\n  );\n};\n\nexport default LoginButton;\n","import React  from 'react';\nimport '../style/App.css';\nimport { Route, Routes } from 'react-router-dom';\nimport Form from './Form';\nimport LoginButton from './LoginButton';\n\nexport default function App() {\n\n return (\n  <div id='double-wide'>\n    <header>List of secrets \n     <LoginButton/>  \n    </header>\n    <Routes>\n      <Route exact path=\"/login\" element={LoginButton} />\n      <Route path=\"/form\" element={<Form/>} />\n    </Routes>\n    <footer id='foot'>Copy rights Tannehill</footer>\n  </div>\n );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\nimport reportWebVitals from './test/reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport {ApolloClient, InMemoryCache, ApolloProvider} from '@apollo/client'\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:3001/graphql',\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n <BrowserRouter>\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>\n </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}